jQuery(function($){
	window.loadCommentPage = loadCommentPage;
	var document_srl = $('.xe_content[class*=document_]').attr('class') && $('.xe_content[class*=document_]').attr('class').replace(/.*document_([0-9]+).*/,'$1');

	$(document).ready(function(){
		window.completeInsertComment = function(ret_obj){
			var error = ret_obj.error;
			var message = ret_obj.message;
			var mid = ret_obj.mid;
			var document_srl = ret_obj.document_srl;
			var comment_srl = ret_obj.comment_srl;
			var cpage = $("ul.comments-list .absc.cpage .this").text();
			if(cpage == ""){
				cpage = '1';
			}
			if(location.href.match(/dispBoardReplyComment/g)||location.href.match(/dispBoardModifyComment/g)){
				var url = current_url.setQuery('mid',mid).setQuery('document_srl',document_srl).setQuery('act','');
				if(comment_srl){
					url = url.setQuery('rnd',comment_srl) + "#comment_"+comment_srl;
				}
				location.href = url;
			}
			loadCommentPage(document_srl, cpage, comment_srl, true);
		}
	});

	var _doCallModuleAction = window.doCallModuleAction;
	window.doCallModuleAction = function(e,t,n) {
		if(t.match(/^procComment(?:Vote(?:UpCancel|DownCancel))$/))	{
			var params = {
				target_srl : n,
				cur_mid	: current_mid,
				mid : current_mid
			};
			$.exec_json(e+'.'+t, params, function(p){
				loadCommentPage(document_srl, undefined, 0, true);
			});
		}
		else if(t.match(/^procComment(?:Declare|Vote(?:Up|Down))$/))	{
			var params = {
				target_srl : n,
				cur_mid	: current_mid,
				mid : current_mid
			};
			$.exec_json(e+'.'+t, params, function(p){
				loadCommentPage(document_srl, undefined, 0, true);
			});
		}
		else {
			_doCallModuleAction(e,t,n);
		}
	}

	$("ul.comments-list").on("click", ".comment-item-tools [href]", function (e) {
		var href = $(this).attr("href");
		if ($(this).hasClass('nonmember')) {
			location.href = href;
			return false;
		}
		if (href.indexOf("#") > -1) {
			href = href.substring(0, href.indexOf("#"));
		}
		var act = href.getQuery("act");
		var comment_srl = href.getQuery("comment_srl");

		if (comment_srl && act == "dispBoardDeleteComment") {
			var cpage = $("ul.comments-list .absc.cpage .this").text();
			if(cpage == ""){
				cpage = '1';
			}
			var recomment_count = $(".comment-item.recomment").length;
			var comment_count = $(".comment-item").length - recomment_count;
			if(cpage !=1 && 
				((jQuery(".comment-item").length == 1) ||
					(comment_count == 1 && $("#comment_"+comment_srl).attr("class").indexOf("recomment") ==-1) ||
					(comment_count == 0 && $(".comment-item").filter(':first').attr("id") == "comment_"+comment_srl)
				)
			){
				cpage--;
			}
			deleteComment(document_srl, comment_srl, cpage);
		} else if (comment_srl && act == "dispBoardModifyComment") {
			openModifyEditor(document_srl, comment_srl, href);
		} else {
			return true;
		}
		return false;
	});

	$("div.comments").on("click", ".absc.cpage [href]", function () {
		var href = $(this).attr("href");
		if (href.indexOf("#") > -1) {
			href = href.substring(0, href.indexOf("#"));
		}
		var cpage = href.replace(/.*cpage=([0-9]+).*/,"$1");
		try {window.history.replaceState({}, 'page', current_url.setQuery('cpage',cpage).setQuery('cpage_detect', '')); }
		catch(err) { }
		loadCommentPage(document_srl, cpage, 1);
		return false;
	});

	$(".absc.comments").on("click", ".comments-list-reload", function () {
		var cpage = $("ul.comments-list .absc.cpage .this").text();
		if(cpage == ""){
			cpage = '1';
		}
		loadCommentPage(document_srl, cpage, 1);
	});

	function loadCommentPage(document_srl, cpage, comment_srl, cpage_detect) {
		var url = "//"+location.hostname+"/index.php?mid="+ current_mid +"&document_srl="+ document_srl + (comment_srl ? ("&comment_srl="+comment_srl) : "") + (cpage ? ("&cpage="+cpage) : "") + (cpage_detect ? "&cpage_detect=1" : "");
		if (document.location.protocol == 'https:'){
			url = url.replace('http:', 'https:'); 
		}

		$('input[name=comment_srl]').val('');
		$('#temp_'+document_srl).val('');

		$('#temp_2').val('');
		$("#reCommentBox").hide();
		$("#CommentBox").append( $("#reCommentBox").hide() );

		var is_changed = false;
		$.ajax({
			type:"GET",
			dataType: "html",
			url: url,      
			success: function(response){
				var $response = $(response);
				if($('div.comment-write-body').find('.cke').length){
					if(
						$('div.comment-write-body div.cke_contents iframe').contents().find('body').html() != '<p><br></p>' ||
						$('div.comment-write-body span.file_count').text() != '0')
						{
							$('div.comment-write-body form.comment-write-form').html( $response.find('div.comment-write-body form.comment-write-form').html() );
							$('div.comment-write-header').html( $response.find('div.comment-write-header').html() );
							is_changed = true;
					}
				}
				$('ul.comments-list').html($response.find('ul.comments-list').html());
				$('div.comments-header').html($response.find('div.comments-header').html());
			}, 
			complete:function(){
				if(comment_srl=="0"){
					return;
				} else if(comment_srl=="1"){
					animate("ul.comments-list");
				} else {
					animate("#comment_"+comment_srl);
				}
			},
			error:function(e){  
				alert(e.responseText);
			}  
		}); 
	}

	function deleteComment(document_srl, comment_srl, cpage){
		var msg = window.confirm($('#comment_'+comment_srl+' .comment-item-tool.delete').attr('msg'));
		if(msg){
			var params = {
				comment_srl : comment_srl,
				mid	: current_mid
			};
			exec_xml("board","procBoardDeleteComment", params, function(){
				loadCommentPage(document_srl, cpage, 0);
			});
		}
	}

	function animate(where){
		$('html,body').animate({scrollTop: ($(where).offset().top) - 200 }, '300');
	}

	function openModifyEditor(document_srl, comment_srl, href, password){
		var text = $('#comment_'+comment_srl).find('.xe_content').html();
		var replace_text = text.replace(/(\n)/g,"").replace(/(<br>)/g,"\n").replace(/<a href[^>]*>/, '').replace(/<\/a>/ig,'');
		replace_text = replace_text.replaceAll("</p><p>","\r\n").replaceAll("&nbsp;","").replaceAll("</p>\r\n<p>","\r\n").replaceAll("<p>", "").replaceAll("</p>", "");
		var o = $('#reCommentBox').eq(0);
		o.find('.recomment-to').remove();
		o.find('input[name=error_return_url]').val('/'+document_srl);
		o.find('input[name=mid]').val(current_mid);
		o.find('input[name=comment_srl]').val(comment_srl);
		o.find('input[name=document_srl]').val(document_srl);
		o.appendTo($('#comment_'+comment_srl)).fadeIn().find('input[name=comment_srl]').val(comment_srl);
		o.find('textarea').val(replace_text).focus();
		o.find('a#use_editor').attr('href',href);
		o.find('.close').attr("onclick","jQuery('#re_cmt').fadeOut().parent().find('a[href*=\\'dispBoardModifyComment\\']').filter(':first').focus();return false");

		o.find('.reply_stk').attr('onclick', 'loadStickerList(undefined, false, '+comment_srl+');');
		o.find('.stk_display').addClass('display-toggle');
		o.find('.stk_display>.stk_head>.sticker_pack, .stk_display>.stk_body').html('');

		if (!$("#comment_"+comment_srl+" .comment-author a[href*='#popup_menu_area']").length){
			o.find(".ab-checkbox").css("display", "none");
		} else {
			o.find(".ab-checkbox").css("display", "");
		}

		if(o.find('.comment-write-author').length>0){
			o.find('#userNameRC').val(id);
			o.find('#userPwRC').val(password ? password : '');
		}
	}
});



// 스티커 댓글 부분 //

var stickerConfig = {};
stickerConfig.delayTime = 3000; // 스티커 댓글 작성 후 다시 스티커를 삽입하기까지 시간 제한 설정. 단위 ms.
stickerConfig.setTimeout = false;

/*
 * 댓글 작성시 스티커 토글 : loadStickerList();
 * 대댓글 작성시 : loadStickerList(undefined, parent_comment_srl);
 * 댓글 수정시 : loadStickerList(undefined, false, comment_srl);
*/

function loadStickerList(page, parent_srl, comment_srl){
	var _page = page;
	page = page ? page : 1;
	var $target = jQuery(!parent_srl && !comment_srl ? '.stk_cmt' : '.stk_cmt_reply');


	var alreadyLoadPage = $target.find('.stk_display .sticker_pack').attr('page') || 1;
	if($target.find('.stk_head .sticker_icon').length){
		if(_page === undefined && !$target.find('.stk_display').hasClass('display-toggle')){
			$target.find('.stk_display').addClass('display-toggle');
			return false;
		}

		if(page == alreadyLoadPage){
			$target.find('.stk_display').toggleClass('display-toggle');
			return false;
		}
	}

	exec_json("sticker.getCommentStickerList",{page:page}, function(ret_obj){
		$target.find('.stk_display').hasClass('display-toggle') && $target.find('.stk_display').toggleClass('display-toggle');
		var sticker = ret_obj['sticker'];
		if(page != 1 && !sticker.length){
			return alert('마지막 페이지입니다.'), false;
		}
		var html = '';
		html += '<li class="sticker_icon">';
		html += '<a href="javascript:;" onclick="'+(page==1 ? 'alert(\'첫 번째 페이지입니다.\')' : ('loadStickerList('+(page-1)+', '+(parent_srl ? parent_srl : 'false')+', '+(comment_srl ? comment_srl : 'false')+')'))  +'">';
		html += '<i class="fas fa-angle-left" aria-hidden="true"></i></a></li>';
		var sticker_length = sticker.length;
		for(i in sticker){

			html += '<li class="sticker_image">';
			html += '<a href="javascript:;" onclick="loadSticker('+sticker[i].sticker_srl+', '+(parent_srl ? parent_srl : 'false') +', '+(comment_srl ? comment_srl : 'false')+');">'
			html += '<div title="'+sticker[i].title+'">';
			html += '<img src="'+sticker[i].main_image+'">';
			html += "</div>";
			html += '</a>';
			html += "</li>";

		}

		//blank
		for(i=12-sticker_length; i>0; i--){
			html += '<li class="sticker_icon">';
			html += '</li>';
		}
		html += '<li class="sticker_icon"><a target="_blank" href="/sticker"><i class="fas fa-home" aria-hidden="true"></i></a></li>';
		html += '<li class="sticker_icon"><a target="_blank" href="/index.php?mid=sticker&act=dispStickerMylist"><i class="fas fa-cog" aria-hidden="true"></i></a></li>';
		html += '<li class="sticker_icon">';
		html += '<a href="javascript:;" onclick="'+(sticker_length < 5 ? 'alert(\'마지막 페이지입니다.\')' : ('loadStickerList('+(page+1)+', '+(parent_srl ? parent_srl : 'false')+', '+(comment_srl ? comment_srl : 'false')+')')) +'">';
		html += '<i class="fas fa-angle-right" aria-hidden="true"></i></a></li>';

		$target.find('.stk_display .sticker_pack').html(html).attr({
			page: page,
		});
		if(page == 1 && _page === undefined){
			var first_sticker = $target.find('.stk_display .sticker_pack .sticker_image');
			if(first_sticker.length > 0){
				var sticker_srl = first_sticker.eq(0).find('a').attr('onclick').replace(/.*\(([0-9]+).*/, '$1');
				loadSticker(sticker_srl, (parent_srl ? parent_srl : false), (comment_srl ? comment_srl : false));
			}
		}

	});

}

function loadSticker(sticker_srl, target_srl, comment_srl){
	if(!sticker_srl){
		return alert('스티커 값이 없습니다.'), false;
	}
	var $target = jQuery(!target_srl && !comment_srl ? '.stk_cmt' : '.stk_cmt_reply');
	var already_exist = $target.find('.stk_display>.stk_body .sticker_'+sticker_srl);

	if(already_exist.length){
		$target.find('.stk_display>.stk_body>ul').hide();
		already_exist.show();
	} else {
		exec_json('sticker.getStickerElemList', {sticker_srl:sticker_srl}, function(ret_obj){
			var stickerImage = ret_obj.stickerImage;
			var html = '';
			html += '<ul class="sticker_'+sticker_srl+'">';
			for(i in stickerImage){
				var image = stickerImage[i];
				html += '<li>';
				html += '<a href="javascript:;" onclick="insertSticker('+sticker_srl+', '+image.sticker_file_srl+', '+(target_srl ? target_srl : 'false')+', '+(comment_srl ? comment_srl : 'false')+')" style="background-image:url('+image.url+');" title="'+image.name+'">';
				html += '</a>';
				html += '</li>';
			}
			html += '</ul>';

			$target.find('.stk_display>.stk_body>ul').hide();
			$target.find('.stk_display>.stk_body').append(html);

		});
	}

}

function insertSticker(sticker_srl, sticker_file_srl, target_srl, comment_srl){

	if(stickerConfig.setTimeout !== false){
		return alert("너무 빠른 시간동안 이모티콘을 등록할 수 없습니다."), false;
	} else {
		stickerConfig.setTimeout = setTimeout(function(){
			stickerConfig.setTimeout = false;
		}, stickerConfig.delayTime);
	}


	var mid = current_mid;
	var document_srl = jQuery('.xe_content[class*=document_]').attr('class') && jQuery('.xe_content[class*=document_]').attr('class').replace(/.*document_([0-9]+).*/,'$1');
	var comment_srl = comment_srl || 0;
	var parent_srl = target_srl || 0;
	var content = "{@sticker:"+sticker_srl+"|"+sticker_file_srl+"}";

	jQuery.ajax({
		headers: {'Content-Type': 'text/plain'},
		type: 'POST',
		dataType: "text",
		url: '/index.php',
		data: '<?xml version="1.0" encoding="utf-8" ?><methodCall><params><_filter><![CDATA[insert_comment]]></_filter><error_return_url><![CDATA['+window.location.pathname+']]></error_return_url><mid><![CDATA['+mid+']]></mid><document_srl><![CDATA['+document_srl+']]></document_srl>'+(comment_srl ? ('<comment_srl><![CDATA['+comment_srl+']]></comment_srl>') : '')+'<parent_srl><![CDATA['+parent_srl+']]></parent_srl><content><![CDATA['+content+']]></content><use_html><![CDATA[Y]]></use_html><module><![CDATA[board]]></module><act><![CDATA[procBoardInsertComment]]></act></params></methodCall>',
		beforeSend : function() {
			//initialSetting.insertComment = true;
			//setTimeout(function() {
			//	initialSetting.insertComment = false;
			//}, 4000);
		},
		success : function(ret_xml) {
			var parseXML = jQuery.parseXML(ret_xml);
			var xml = jQuery(parseXML);

			var error = xml.find('error').text();
			var message = xml.find('message').text();
			var mid = xml.find('mid').text();
			var document_srl = xml.find('document_srl').text();
			var comment_srl = xml.find('comment_srl').text();
			var comment_page = xml.find('comment_page').text();
			if(!parseInt(error)){
				//******** 스티커 댓글 삽입 완료후 실행할 부분 *******//
				loadCommentPage(document_srl, comment_page, comment_srl);
				$('.stk_display').addClass('display-toggle');
			} else {
				alert(message);
			}
		},
		error : function(request, status, error) {
		},
		complete : function() {
			//initialSetting.insertComment = false;
		}
	});
}
